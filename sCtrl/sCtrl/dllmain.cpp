// dllmain.cpp : Defines the entry point for the DLL application.
#include "stdafx.h"
#include <iostream>
#include <process.h>
#include "CyAPI.h"

#define TRUE	1
#define FALSE	0
#define SunSDR_API __declspec(dllexport)

/***************************************************************************************************************************************************
 * Глобальные переменные	
 ***************************************************************************************************************************************************/
CCyUSBDevice *USBDevice;	// указатель на управляющий класс

#ifdef __cplusplus
extern "C" {
#endif

SunSDR_API void open(int devNum);
SunSDR_API void close();
SunSDR_API int isOpen();
/***************************************************************************************************************************************************
 * Назначение:	
 * Комментарии: 
 ***************************************************************************************************************************************************/
BOOL APIENTRY DllMain( HMODULE hModule,
                       DWORD  ul_reason_for_call,
                       LPVOID lpReserved
					 )
{
	switch (ul_reason_for_call)
	{
		case DLL_PROCESS_ATTACH:
		case DLL_THREAD_ATTACH:
		case DLL_THREAD_DETACH:
		case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}
/***************************************************************************************************************************************************
 * Назначение:	Инициализация класса, динамическое создание компонента
 * Комментарии: 
 ***************************************************************************************************************************************************/
SunSDR_API void init()
{
	USBDevice = new CCyUSBDevice;
	//USBDevice->Close();
}
/***************************************************************************************************************************************************
 * Назначение:	Деинициализация
 * Комментарии: 
 ***************************************************************************************************************************************************/
SunSDR_API void deinit()
{
	delete USBDevice;
}
/***************************************************************************************************************************************************
 * Назначение:	Открытие устройства
 * Комментарии: 
 ***************************************************************************************************************************************************/
SunSDR_API void open(int devNum)
{
	if(isOpen())
	close();
	USBDevice->Open(devNum);
}
/***************************************************************************************************************************************************
 * Назначение:	Закрытие устройства
 * Комментарии: 
 ***************************************************************************************************************************************************/
SunSDR_API void close()					// закрытие устройства
{
	USBDevice->Close();		
}
/***************************************************************************************************************************************************
 * Назначение:	Проверка, открыто ли устройство
 * Комментарии: 
 ***************************************************************************************************************************************************/
SunSDR_API int isOpen()					// проверка, открыто ли устройство
{
	return USBDevice->IsOpen();
}
/***************************************************************************************************************************************************
 * Назначение:	Запись буфера данных в SunSDR
 * Комментарии: 
 ***************************************************************************************************************************************************/
SunSDR_API void write(BYTE *pBuf, int Len)
{
	LONG Length = Len;
	if(USBDevice->IsOpen())
	{
		// устанавливаем старший бит для индикации регистра для записи
		USBDevice->BulkOutEndPt->XferData(pBuf, Length);	
	};
}
/***************************************************************************************************************************************************
 * Назначение:	Чтение состояния кнопок в SunSDR
 * Комментарии:
 ***************************************************************************************************************************************************/
SunSDR_API BYTE read()
{
	BYTE Buf[512] = {0, 0, 0, 0, 0};
	LONG Length = 1;
	int cnt = 0;

	if(USBDevice->IsOpen())
	{		
		if(USBDevice->BulkInEndPt)
			USBDevice->BulkInEndPt->XferData(Buf, Length);
		return Buf[0];
	}
	else
		return 0;
}
/***************************************************************************************************************************************************
 ***************************************************************************************************************************************************/
#ifdef __cplusplus
}
#endif
